# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
  SELECT
  artist_name,track_name,avg(popularity),avg(danceability),avg(energy)
  FROM BIT_DB.spotifydata
  GROUP BY artist_name, track_name

#Then I determined who the Top 10 artists are by popularity of their songs.
  SELECT track_name, artist_name, popularity
  FROM BIT_DB.spotifydata
  ORDER BY popularity desc
  LIMIT 10;

#I followed up by finding the Top 10 artists by the average popularity of all their songs.
  SELECT artist_name, avg(popularity)
  FROM BIT_DB.Spotifydata
  GROUP BY artist_name
  ORDER BY avg(popularity) desc
  LIMIT 10;

#Next, I determined which artist released the longest song.
	SELECT artist_name, track_name, duration_ms
	FROM BIT_DB.Spotifydata
	ORDER BY duration_ms desc
	LIMIT 1;
	
#Then I determined hhich songs have some instrumentalness.
	SELECT artist_name, track_name, instrumentalness
	FROM BIT_DB.Spotifydata
	WHERE instrumentalness >0;

#I reworked the previous search to see if any of the top 10 songs have instrumentalness.
	SELECT artist_name, track_name, popularity, instrumentalness
	FROM BIT_DB.Spotifydata
	GROUP BY artist_name
	ORDER BY popularity desc
  	LIMIT 10;

#Finally, I calculated the average popularity for the artists, and for the every artist with average popularity of 90 and above, I labeled them as a "Top Star".
	WITH popularity_average_CTE AS (SELECT artist_name, avg(popularity) as average_popularity
	FROM Spotifydata
	GROUP BY artist_name)
			
	SELECT artist_name, average_popularity, 'Top Star' AS tag
	FROM popularity_average_CTE
	WHERE average_popularity >=90;

